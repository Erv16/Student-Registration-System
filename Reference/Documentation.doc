Explanation of Procedures and Functions:

Q1)
Sequence log#
-In this question, an in-built object of oracle is used which is known as Sequence to generate a sequence starting from 100 when ever a new user enters the system.
-First the sequence is created by giving name to it, then the initialization value is written and the value by what it should be incremented is written. 
-Now, when the values are inserted into logs table the sequence is increased by 1 and the new value of log# is found by using a pointer(currval or nextval).

Q2)
-This question is for displaying different tables.
-As we have multiple rows to show we use a reference cursor to fetch multiple rows in a loop.
-The function show_Students is created for displaying students table.
-The function show_Courses is created for displaying courses table.
-The function show_TAs is created for displaying tas table.
-The function show_Classes is created for displaying classes table.
-The function show_prerequisites is created for displaying prerequisites table.
-The function show_Enrollments is created for displaying enrollments table.
-The function show_logs is created for displaying logs table.         


Q3)
show_TA
-This function is for finding whether the class has TA or not.
-If the class has TA then we display the B#,first name and last name of that TA else we display a message that the class has no TA.

Q4)
-this function is for finding prerequisites of a course, displaying them.
-in this function, dept_code and course# are parameters.
-this function invoke another procedure which is recercive procedure to get prerequisites.

Q5)
 Procedure enroll_student:
-This procedure is created for enrolling a student in a class.
-In this procedure, B# and classid are taken as an input parameter.
-Before enrolling a student in a class certain conditions are checked using if statements.Like we check whether the B# and classid are valid, when the class is being offered. We also check the class size before making a new enrollment. Before enrolling the student in a class we also check that whether that student has finished all his prerequisites with good grade and also how many classes that student is taking for a present semester.
-Also, after enrolling a student in a class, trigger update_class_size is raised for updating the value of class size, so that before enrolling other students in same class we can check the capacity of the class.


Q6)
-This procedure is created for dropping a student from a class.
-In this procedure, B# and classid are taken as an input parameter.
-Finally, after dropping a student from a class, trigger update_class_on_drop is raised for updating the value of class size, so that after dropping a student we can create a space for new enrollment. 

Q7)
-This question is for deleting a tuple from students table.
-We cannot directly delete the tuple from students table because of its parent child relationship with enrollments.
-So, first we delete the tuple from enrollments table using trigger delete_enrollments before we delete the tuple from students table so as to maintain the parent child integrity.

Q8)
-This question is for raising different triggers for different situations.
-Like the trigger update_logs_on_delete_student is raised when ever a tuple is deleted from students table.And for every delete on students table, a new entry in logs table is created.
-Similarly, the trigger logs_delete_enrollments is raised when a tuple from enrollments is deleted and then for every delete on enrollments table, a new entry is created in logs table.
-Also, one more trigger logs_insert_enrollments is raised when a new tuple is inserted in enrollments table.For each new entry in enrollments table a new entry in logs table is created. 
-Finally, after creating all the above procedures, they are placed inside a package.
-So, when we run the package, all the procedures get stored, which are later on called from the java code by the user. 



